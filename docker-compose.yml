version: "3.3"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper

    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  cassandra:
    image: cassandra
    ports:
      - "9042:9042"

  spark:
    image: bitnami/spark:latest
    ports:
      - "4040:4040"
    environment:
      SPARK_MASTER_URL: spark://spark:7077
      SPARK_SUBMIT_ARGS: --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.1.1 pyspark-shell
    volumes:
      - .:/opt/spark/work-dir
    depends_on:
      - kafka
      - cassandra

  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      CASSANDRA_HOST: cassandra
      KAFKA_TOPIC: weather
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPARK_MASTER_URL: spark://spark:7077
      SPARK_APPLICATION_PYTHON_LOCATION: /opt/spark/work-dir/app.py
    depends_on:
      - kafka
      - spark
      - cassandra
